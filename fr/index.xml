<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guide de portage Oracle vers PostgreSQL on Porter Oracle vers PostgreSQL</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/</link><description>Recent content in Guide de portage Oracle vers PostgreSQL on Porter Oracle vers PostgreSQL</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://dalibo.github.io/from-oracle-to-postgresql/fr/index.xml" rel="self" type="application/rss+xml"/><item><title>Correspondance des types de données</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/correspondance-des-types-de-donnees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/correspondance-des-types-de-donnees/</guid><description>Correspondance des types de données # Le SGBD Oracle ne supporte pas l&amp;rsquo;ensemble des types de données spécifiés par la norme SQL. Il s&amp;rsquo;agit notamment des types numériques natifs tels que SMALLINT, INT et BIGINT.</description></item><item><title>Portage des procédures et fonctions</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/portage-des-procedures-et-fonctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/portage-des-procedures-et-fonctions/</guid><description>Portage des procédures et fonctions # Déclaration des procédures et fonctions # Les deux SGBD permettent de créer des procédures et des fonctions. Les procédures sont appelables par les mêmes requêtes CALL et les fonctions par les SELECT.</description></item><item><title>Spécificités des types de données</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/specificites-des-types-de-donnees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/specificites-des-types-de-donnees/</guid><description>Spécificités des types de données # Manipulation des types VARCHAR # Pour Oracle, une chaine vide est aussi une chaîne NULL. Elle a les deux propriétés à la fois. PostgreSQL fait la différence : soit la chaîne est inconnue (IS NULL) soit elle est vide.</description></item><item><title>Jointures</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/jointures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/jointures/</guid><description>Jointures # Le SGBD Oracle supporte la syntaxe normalisée d&amp;rsquo;écriture des jointures seulement depuis la version 9i. Auparavant, les jointures étaient exprimées telle que le définissait la première version de la norme SQL, avec une notation propriétaire pour la gestion des jointures externes.</description></item><item><title>Portage des triggers</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/portage-des-triggers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/portage-des-triggers/</guid><description>Portage des triggers # Structure d&amp;rsquo;un trigger # Dans Oracle, la déclaration du trigger embarque également le code du trigger. Dans PostgreSQL, le trigger et le code du trigger sont deux choses distinctes : le trigger appelle une fonction trigger selon les évènements sur lesquels il doit réagir.</description></item><item><title>Reprise des tables</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-tables/</guid><description>Reprise des tables # La définition des tables est quasiment identique pour les deux SGBD à la différence près que PostgreSQL n&amp;rsquo;a pas de table temporaire globale. Les tables temporaires sont privées à une session.</description></item><item><title>Expressions conditionnelles</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/expressions-conditionnelles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/expressions-conditionnelles/</guid><description>Expressions conditionnelles # Bien qu&amp;rsquo;Oracle implémente les différentes expressions conditionnelles telles qu&amp;rsquo;elles sont spécifiées dans la norme SQL, encore trop de requêtes SQL utilisent les fonctions historiques Oracle.
Portage de DECODE # La fonction DECODE d&amp;rsquo;Oracle est un équivalent propriétaire de la clause CASE, qui est normalisée.</description></item><item><title>Reprise des vues</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-vues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-vues/</guid><description>Reprise des vues # Les vues simples sont portées sans difficultés sur PostgreSQL.
PostgreSQL supporte également les vues que l&amp;rsquo;on peut mettre à jour (updatable views), y compris avec la clause WITH CHECK OPTION qui permet de s&amp;rsquo;assurer que des données insérées ou mises à jour dans la vue satisfont toujours les éventuelles conditions de sélection de cette vue.</description></item><item><title>Structures de contrôles</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/structures-de-controles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/structures-de-controles/</guid><description>Structures de contrôles # Les boucles et les différentes structures de contrôles ne nécessitent pas de portage particulier, en dehors des instructions GOTO et FORALL.
Boucle FOR REVERSE # La boucle FOR .</description></item><item><title>Reprise des séquences</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-sequences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-sequences/</guid><description>Reprise des séquences # La reprise des séquences ne nécessite pas un travail important. Les séquences sont implémentées de la même façon dans PostgreSQL et dans Oracle. Cependant, certains points nécessitent un peu d&amp;rsquo;attention.</description></item><item><title>Reprise du code PL/SQL</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-du-code-pl-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-du-code-pl-sql/</guid><description>Reprise du code PL/SQL # Chaînes vides et valeur NULL # Pour Oracle, une chaîne vide est aussi une valeur NULL. Le SGBD PostgreSQL fait la différence : soit la chaîne est nulle (IS NULL) soit elle est vide.</description></item><item><title>Traitement des hiérarchies</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/traitement-des-hierarchies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/traitement-des-hierarchies/</guid><description>Traitement des hiérarchies # Oracle propose la fonction CONNECT BY qui permet d&amp;rsquo;explorer un arbre hiérarchique. Cette fonction spécifique à Oracle possède des fonctionnalités avancées comme la détection de cycle et propose des pseudos-colonnes comme le niveau de la hiérarchie et la construction d&amp;rsquo;un chemin.</description></item><item><title>Curseurs</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/curseurs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/curseurs/</guid><description>Curseurs # La notation des variables curseurs est quelque peu différente entre Oracle et PostgreSQL.
Déclaration des curseurs # Sous Oracle, on déclare un curseur de cette façon : CURSOR moncurseur.</description></item><item><title>Gestion des transactions</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/gestion-des-transactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/gestion-des-transactions/</guid><description>Gestion des transactions # La gestion des transactions et des verrous est assez similaire entre Oracle et PostgreSQL. Il faut noter deux différences majeures entre les deux SGBD. Tout d&amp;rsquo;abord, Oracle ouvre implicitement une transaction lorsque l&amp;rsquo;on commence à travailler, tandis que PostgreSQL travaille en autocommit par défaut.</description></item><item><title>Reprise des index</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-index/</guid><description>Reprise des index # Pour les index, seule la forme BTREE correspond. Les autres types d&amp;rsquo;index d&amp;rsquo;Oracle ne sont pas implémentées mais PostgreSQL dispose lui-aussi d&amp;rsquo;autres types d&amp;rsquo;index. Quoiqu&amp;rsquo;il en soit, la plupart des index utilisés sont des index de type BTREE car c&amp;rsquo;est la méthode par défaut utilisée lors de la création d&amp;rsquo;un index.</description></item><item><title>Reprise des partitions</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-partitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/reprise-des-partitions/</guid><description>Reprise des partitions # PostgreSQL dispose d&amp;rsquo;un partitionnement déclaratif depuis la version 10, qui ne cesse de s&amp;rsquo;améliorer de version majeure en version majeure. Le type du partitionnement est décisif au moment de la définition du modèle, car il est très coûteux de le changer au moment de la vie des données.</description></item><item><title>Spécificités PL/SQL</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/specificites-pl-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/specificites-pl-sql/</guid><description>Spécificités PL/SQL # Transactions autonomes # On retrouve souvent des PRAGMA associés aux transactions autonomes en PL/SQL. Cette dernière notion n&amp;rsquo;existe pas dans PostgreSQL.
Il est possible d&amp;rsquo;émuler les transactions autonomes par le biais d&amp;rsquo;un dblink, mais c&amp;rsquo;est une solution particulièrement contre-performante et consommatrice de ressources.</description></item><item><title>Packages propriétaires</title><link>https://dalibo.github.io/from-oracle-to-postgresql/fr/packages-proprietaires/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dalibo.github.io/from-oracle-to-postgresql/fr/packages-proprietaires/</guid><description>Packages propriétaires # Les paquets de fonctions et de procédures fournis par Oracle, n&amp;rsquo;ont pas ou peu d&amp;rsquo;équivalents dans PostgreSQL. Il est possible de chercher à les réécrire entièrement ou bien de s&amp;rsquo;appuyer sur des contributions libres pour obtenir un comportement proche de ceux proposés par Oracle.</description></item></channel></rss>