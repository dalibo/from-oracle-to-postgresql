<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Porting database objects on From Oracle to PostgreSQL</title><link>https://example.com/porting-the-database-schema-to-postgresql/</link><description>Recent content in Porting database objects on From Oracle to PostgreSQL</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/porting-the-database-schema-to-postgresql/index.xml" rel="self" type="application/rss+xml"/><item><title>Datatypes</title><link>https://example.com/datatypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/datatypes/</guid><description>Datatypes # The Oracle RDBMS does not support every SQL standard data type natively. Some are supported but converted into an equivalent internal type. For example, all native integer types, like integer being converted to NUMBER(38).</description></item><item><title>Table migration</title><link>https://example.com/table-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/table-migration/</guid><description>Table migration # Table definition are quite identical between both RDBMS, except that PostgreSQL does not have global temporary tables. Each temporary table is private to its own session. Data inserted into a temporary table can be automatically destroyed at the transaction end (using ON COMMIT DELETE ROWS clause) or only at the end of the session (with default implicit clause ON COMMIT PRESERVE ROWS).</description></item><item><title>Views migration</title><link>https://example.com/views-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/views-migration/</guid><description>Views migration # Simple views are ported with no difficulty to PostgreSQL.
A view is updatable as long as it only references only one table (or another updatable view) and doesn&amp;rsquo;t contain more complex operators, group by, join types, etc.</description></item><item><title>Sequences migration</title><link>https://example.com/sequences-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/sequences-migration/</guid><description>Sequences migration # There is little work on sequences. Sequences are very similar in PostgreSQL and Oracle. A few points need attention, though.
On a general basis, clauses preceded by NO to use default values need a space between NO and the rest of the clause to be ported to PostgreSQL.</description></item><item><title>Index migration</title><link>https://example.com/index-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/index-migration/</guid><description>Index migration # Only the BTree indexes match between both databases. The other index types from Oracle don&amp;rsquo;t exist in PostgreSQL, but postgreSQL also has some indexes types of its own.</description></item><item><title>Partitioning</title><link>https://example.com/partitioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/partitioning/</guid><description>Partitioning # PostgreSQL accepts declarative partitioning since version 10 and things keep getting better from major release to another. A table is devided into partitions as declared by its partitioned key, which is decisive when defining the model and could be costly to change during the life of the data.</description></item></channel></rss>